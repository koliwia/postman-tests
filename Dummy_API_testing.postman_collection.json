{
	"info": {
		"_postman_id": "30bdf3e7-13b5-48b4-a92c-c083ea654c81",
		"name": "Dummy_API_testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get_all_employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const jsonData = pm.response.json();\r",
							"\r",
							"pm.test('Data type of the response' , () => {   \r",
							"    for (const employee of jsonData.data) {\r",
							" pm.expect(employee.id).to.be.a('number');\r",
							" pm.expect(employee.employee_name).to.be.a('string');\r",
							" pm.expect(employee.employee_salary).to.be.a('number');\r",
							" pm.expect(employee.employee_age).to.be.a('number');\r",
							"\r",
							"}\r",
							"        \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/employees",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_single_employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Person is Yuki\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(22);\r",
							"    pm.expect(jsonData.data.employee_name).to.be.a('string');\r",
							"    pm.expect(pm.response.text()).to.include(\"Yuri Berry\");\r",
							"});\r",
							"\r",
							"pm.test(\"Record has been fetched\", () => {\r",
							"    pm.expect(pm.response.json().message).to.eql(\"Successfully! Record has been fetched.\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "id",
							"value": "22",
							"type": "text"
						},
						{
							"key": "employee_name",
							"value": "Yuri Berry",
							"type": "text"
						},
						{
							"key": "employee_age",
							"value": "40",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/employee/22",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"employee",
						"22"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_new_ employee",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", () => {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"pm.test(\"New employee created\", () => {\r",
							"    pm.expect(pm.response.json().message).to.eql(\"Successfully! Record has been added.\")\r",
							"})\r",
							"\r",
							"let id = pm.response.json().data.id\r",
							"pm.collectionVariables.set('id',id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\t{\r\n        \"name\":\"Lena\",\r\n        \"salary\":\"500000\",\r\n        \"age\":\"23\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/create",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"create"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Content-Type header is visible\", () => {\r",
							"  pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							"pm.test(\"Employee updated\", () => {\r",
							"    pm.expect(pm.response.json().message).to.eql(\"Successfully! Record has been updated.\")\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\t{\r\n        \"name\":\"Lena\",\r\n        \"salary\":\"500010\",\r\n        \"age\":\"23\"\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/update/{{id}}",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"update",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete_employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Employee deleted\", () => {\r",
							"    pm.expect(pm.response.json().message).to.eql(\"Successfully! Record has been deleted\")\r",
							"})\r",
							"\r",
							"pm.test(\"Data type of the response\", () => {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.status).to.be.a('string');\r",
							"    pm.expect(jsonData.data).to.be.a('string');\r",
							"    pm.expect(jsonData.message).to.be.a('string');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://dummy.restapiexample.com/api/v1/delete/2",
					"protocol": "http",
					"host": [
						"dummy",
						"restapiexample",
						"com"
					],
					"path": [
						"api",
						"v1",
						"delete",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "ID",
			"value": ""
		},
		{
			"key": "id",
			"value": ""
		}
	]
}